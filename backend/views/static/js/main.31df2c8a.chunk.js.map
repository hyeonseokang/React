{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","Today.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","id","initialTodos","text","done","AddTodo","concat","todoReducer","state","action","type","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","console","log","useTodoDispatch","today","Date","TodoHeadBlock","TodoHead","todos","undoneTasks","toLocaleDateString","year","month","day","className","weekday","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","visibility","onClick","React","memo","TodoListBlock","TodoList","CirecleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","onChange","target","autoFocus","placeholder","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31df2c8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0,0,0,0.4);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    padding-bottom: 4px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({children}){\r\n    return (\r\n        <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate;","import React, {useReducer, createContext, useContext, useRef} from 'react';\n\nlet id = 1;\nconst initialTodos = [\n    {\n        id: 1,\n        text: '프로젝트 생성하기',\n        done: true\n      },\n      {\n        id: 2,\n        text: '컴포넌트 스타일링하기',\n        done: true\n      },\n      {\n        id: 3,\n        text: 'Context 만들기',\n        done: false\n      },\n      {\n        id: 4,\n        text: '기능 구현하기',\n        done: false\n      }\n]\n\nconst AddTodo = (text, done=false)=>{\n    initialTodos.concat({\n        id: id++,\n        text: text,\n        done: done,\n    })\n}\n\nAddTodo(\"공부하기\", true);\nAddTodo(\"컴포넌트 이쁘게 꾸미기\", true);\nAddTodo(\"context  만들기\");\nAddTodo(\"완벼기능 구현!!\");\n\nconst todoReducer = (state, action)=>{\n    switch(action.type){\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(todo=>\n                todo.id === action.id ?{...todo, done: !todo.done}:todo);\n        case 'REMOVE':\n            return state.filter(todo=> todo.id !== action.id);\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({children}){\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const nextId = useRef(5);\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>\n                    {children}\n                </TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState(){\n    const context = useContext(TodoStateContext);\n    if (!context){\n        throw new Error(\"Cannot find TodoStateProvidier\");\n    }\n    else{\n        console.log(\"State 가져옴\");\n    }\n    return context;\n}\n\nexport function useTodoDispatch() {\n    return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId(){\n    return useContext(TodoNextIdContext);\n}","const today = new Date();\nconst getNow = ()=>{\n    return today.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n};\nconst getDay = ()=>{\n    return today.toLocaleDateString('ko-KR', { weekday: 'long' });\n};\n\nexport {getNow, getDay};\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport {getNow, getDay} from '../Today'; \r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1{\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst TodoHead = ()=>{\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n    console.log(todos);\r\n    return (\r\n        <TodoHeadBlock>\r\n            <h1>{getNow()}</h1>\r\n            <div className=\"day\">{getDay()}</div>\r\n            <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n        </TodoHeadBlock>\r\n    )\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {MdDone, MdDelete} from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext';\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover{\r\n        color: #ff6b6b;;\r\n    }\r\n    display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover{\r\n        ${Remove}{\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props=>\r\n        props.done &&\r\n        css `\r\n            border: 1px solid #38d8a9;\r\n            color: #38d8a9\r\n        `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${props=>\r\n        props.done &&\r\n    css`\r\n        color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst TodoItem =({id, done, text})=>{\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = ()=> dispatch({type:'TOGGLE', id});\r\n    const onRemove = ()=> dispatch({type:'REMOVE', id});\r\n\r\n    return (\r\n        <TodoItemBlock visibility=\"none\">\r\n            <CheckCircle done={done} onClick={onToggle}>{done&&<MdDone/>}</CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete/>\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    )\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst TodoList = ()=>{\r\n    const todos = useTodoState();\r\n    console.log(\"ef\", todos);\r\n    return (\r\n        <TodoListBlock>\r\n            {todos.map(todo=>(\r\n            <TodoItem key={todo.id} id={todo.id} text={todo.text} done={todo.done}></TodoItem>\r\n            ))}\r\n        </TodoListBlock>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CirecleButton = styled.button`\r\n    background: #38d9a9;\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n    &:active{\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display:block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color:white;\r\n    border-radius: 50%;\r\n    border:none;\r\n    outline:none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props=>\r\n    props.open &&\r\n    css`\r\n        background: #ff6b6b;\r\n        &:hover{\r\n            background: #ff8787;\r\n        }\r\n        &:active{\r\n            background:#fa5252;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst TodoCreate = ()=>{\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = ()=> setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input onChange={onChange} autoFocus placeholder=\"할 일을 입력 후, Enter를 누르세요\" />\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CirecleButton onClick={onToggle} open={open}>\r\n                <MdAdd/>\r\n            </CirecleButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoCreate;","import React from \"react\";\nimport {createGlobalStyle} from 'styled-components';\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport { TodoProvider } from \"./TodoContext\";\n\nconst GlobalStyle = createGlobalStyle`\n  body{\n    background: #e9ecef;\n  }\n`;\n\nfunction App(){\n  return(\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead/>\n        <TodoList/>\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}